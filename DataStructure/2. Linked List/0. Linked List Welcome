// class Node {
//   constructor(val) {
//     this.val = val;
//     this.left = null;
//     this.right = null;
//   }
// }

const treeLevels = (root) => {
  // todo
  // n = # nodes
  // Time: O(n)
  // Space: O(n)
  if (root === null) return []
  const levels = []
  const queue = [ { node: root, levelNum: 0 } ]
  while (queue.length > 0) {
    const { node, levelNum } = queue.shift()
    
    if (levels.length === levelNum) {
      levels.push( [ node.val ] )
    } else{
      levels[levelNum].push(node.val)
    }
    
    if (node.left) {
      queue.push({node: node.left, levelNum: levelNum + 1})
    }
    if (node.right) {
      queue.push({node: node.right, levelNum: levelNum + 1})
    }
  }
  return levels
};

module.exports = {
  treeLevels,
};
 